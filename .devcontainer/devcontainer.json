// For format details, see https://aka.ms/devcontainer.json. For config options, see the README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.202.5/containers/typescript-node
{
  "name": "Nest.js Example with DevContainer",
  //runArgs is used to set container name to USERNAME.programname
  //the reason it shows ${localEnv:USERNAME} is so that it covers both Windwos and *nix systems as frontend VSCode
  "runArgs": ["--init", "--network=host"],
  "build": {
    "dockerfile": "Dockerfile",
    // Update 'VARIANT' to pick a Node version: 16, 14, 12.
    // Append -bullseye or -buster to pin to an OS version.
    // Use -bullseye variants on local on arm64/Apple Silicon.
    "args": {
      "VARIANT": "16-bullseye"
    }
  },

  "portsAttributes": {
    "9080": {
      "label": "NestJS Example",
      "onAutoForward": "notify"
    }
  },
  "customizations": {
    "vscode": {
      "settings": {},
      "extensions": [
        "dbaeumer.vscode-eslint",
        "mtxr.sqltools",
        "mtxr.sqltools-driver-pg",
        "ms-azuretools.vscode-docker",
        "mindaro-dev.file-downloader",
        "github.vscode-pull-request-github",
        "redhat.vscode-yaml"
      ]
    },
    "codespaces": {
      "repositories": {
        "acertaanalyticssolutions/acerta-standardnpm": {
          "permissions": {
            "contents": "read"
          }
        }
      }
    }
  },

  // Add the IDs of extensions you want installed when the container is created.

  // Use 'forwardPorts' to make a list of ports inside the container available locally.
  // "forwardPorts": [],

  // Comment out connect as root instead. More info: https://aka.ms/vscode-remote/containers/non-root.
  "remoteEnv": { "DOCKER_BUILDKIT": "1" },
  "remoteUser": "node",
  "features": {
    "docker-from-docker": {
      "version": "latest",
      "moby": true
    },
    "kubectl-helm-minikube": "latest",
    "git": "latest",
    "github-cli": "latest"
  },

  // install all dependent packages after container is built and files copied into
  "postCreateCommand": "npm install  --userconfig=/dev/null husky --save-dev && npm set-script prepare \"husky install\" && npm run prepare"
}
